{
  "id": "2862bc9431",
  "title": "React ch text",
  "author": "Herza ",
  "tags": [
    "javascript",
    "WhatsApp",
    "bot"
  ],
  "description": "Sebuah Kodingan untuk memberikan reaksi ke channel WhatsApp yang mengonversikan text biasa ke emoji",
  "code": "let handler = async (m, { conn, text, usedPrefix, command }) => {\n    if (!text) throw `Please provide URL and text!\\nExample:\\n${usedPrefix + command} https://whatsapp.com/channel/0029VakzvGdATRSgc62rzr0D/872 Hello 1`\n    \n    let args = text.split(' ')\n    if (args.length < 2) throw `Format: ${usedPrefix + command} <link> <text> [type]`\n    \n    let url = args[0]\n    let messageText = args[1]\n    let styleType = parseInt(args[2] || 1)\n    \n    if (styleType < 1 || styleType > 10 || isNaN(styleType)) styleType = 1\n    \n    let match = url.match(/whatsapp\\.com\\/channel\\/([\\w-]+)\\/(\\d+)/)\n    if (!match) throw `Invalid WhatsApp channel URL. Format should be: https://whatsapp.com/channel/ID/MessageID`\n    \n    let channelId = match[1]\n    let messageId = match[2]\n    \n    try {\n        let styledText = await style(messageText, styleType)\n        \n        let meta = await conn.newsletterMetadata(\"invite\", channelId)\n        if (!meta) throw 'Failed to get newsletter metadata'\n        \n        await conn.newsletterReactMessage(meta.id, messageId, styledText)\n        \n        m.reply(`Successfully reacted to message with styled text: ${styledText}`)\n    } catch (e) {\n        m.reply(`Error: ${e}`)\n        console.log(e)\n    }\n}\n\n/* \n * [ STYLE FONT ]\n * credit: https://whatsapp.com/channel/0029VaRI1OB2P59cTdJKZh3q/\n \n * 📃: 𝗆𝖾𝗇𝗀𝗎𝖻𝖺𝗁 𝖿𝗈𝗇𝗍 𝖻𝗂𝖺𝗌𝖺 𝗃𝖾𝗅𝖾𝗄 𝗉𝗎𝗇𝗒𝖺 𝗅𝗎 𝗃𝖺𝖽𝗂 𝗄𝖾𝖼𝖾 𝖽𝖺𝗇 𝖻𝗂𝗌𝖺 𝗋𝖾𝖺𝖼𝗍 𝖼𝗁𝖺𝗇𝗇𝖾𝗅 𝗈𝗋𝖺𝗇𝗀𝟤 \n*/\n\nvar xStr = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0']\nvar yStr = Object.freeze({\n1: ['ᴀ', 'ʙ', 'ᴄ', 'ᴅ', 'ᴇ', 'ꜰ', 'ɢ', 'ʜ', 'ɪ', 'ᴊ', 'ᴋ', 'ʟ', 'ᴍ', 'ɴ', 'ᴏ', 'ᴘ', 'q', 'ʀ', 'ꜱ', 'ᴛ', 'ᴜ', 'ᴠ', 'ᴡ', 'x', 'ʏ', 'ᴢ', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0'],\n2: ['𝑎', '𝑏', '𝑐', '𝑑', '𝑒', '𝑓', '𝑔', 'ℎ', '𝑖', '𝑗', '𝑘', '𝑙', '𝑚', '𝑛', '𝑜', '𝑝', '𝑞', '𝑟', '𝑠', '𝑡', '𝑢', '𝑣', '𝑤', '𝑥', '𝑦', '𝑧', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0'],\n3: ['𝐚', '𝐛', '𝐜', '𝐝', '𝐞', '𝐟', '𝐠', '𝐡', '𝐢', '𝐣', '𝐤', '𝐥', '𝐦', '𝐧', '𝐨', '𝐩', '𝐪', '𝐫', '𝐬', '𝐭', '𝐮', '𝐯', '𝐰', '𝐱', '𝐲', '𝐳', '𝟏', '𝟐', '𝟑', '𝟒', '𝟓', '𝟔', '𝟕', '𝟖', '𝟗', '𝟎'],\n4: ['𝒂', '𝒃', '𝒄', '𝒅', '𝒆', '𝒇', '𝒈', '𝒉', '𝒊', '𝒋', '𝒌', '𝒍', '𝒎', '𝒏', '𝒐', '𝒑', '𝒒', '𝒓', '𝒔', '𝒕', '𝒖', '𝒗', '𝒘', '𝒙', '𝒚', '𝒛', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0'],\n5: ['𝗮', '𝗯', '𝗰', '𝗱', '𝗲', '𝗳', '𝗴', '𝗵', '𝗶', '𝗷', '𝗸', '𝗹', '𝗺', '𝗻', '𝗼', '𝗽', '𝗾', '𝗿', '𝘀', '𝘁', '𝘂', '𝘃', '𝘄', '𝘅', '𝘆', '𝘇', '𝟭', '𝟮', '𝟯', '𝟰', '𝟱', '𝟲', '𝟳', '𝟴', '𝟵', '𝟬'],\n6: ['Ⓐ︎', 'Ⓑ', '︎Ⓒ', '︎Ⓓ︎', 'Ⓔ︎', 'Ⓕ︎', 'Ⓖ︎', 'Ⓗ︎', 'Ⓘ︎', 'Ⓙ︎', 'Ⓚ︎', 'Ⓛ︎', 'Ⓜ︎', 'Ⓝ︎', 'Ⓞ︎', 'Ⓟ', '︎Ⓠ︎', 'Ⓡ︎', 'Ⓢ', '︎Ⓣ︎', 'Ⓤ︎', 'Ⓥ︎', 'Ⓦ︎', 'Ⓧ︎', 'Ⓨ︎', 'Ⓩ︎', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0'],\n7: ['🅐︎', '🅑︎', '🅒', '︎🅓︎', '🅔︎', '🅕︎', '🅖︎', '🅗', '︎🅘︎', '🅙︎', '🅚', '︎🅛︎', '🅜', '︎🅝︎', '🅞', '︎🅟', '︎🅠︎', '🅡︎', '🅢', '︎🅣', '︎🅤', '︎🅥︎', '🅦︎', '🅧︎', '🅨︎', '🅩︎', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0'],\n8: ['ⓐ', 'ⓑ', 'ⓒ', 'ⓓ', 'ⓔ', 'ⓕ', 'ⓖ', 'ⓗ', 'ⓘ', 'ⓙ', 'ⓚ', 'ⓛ', 'ⓜ', 'ⓝ', 'ⓞ', 'ⓟ', 'ⓠ', 'ⓡ', 'ⓢ', 'ⓣ', 'ⓤ', 'ⓥ', 'ⓦ', 'ⓧ', 'ⓨ', 'ⓩ', '①', '②', '③', '④', '⑤', '⑥', '⑦', '⑧', '⑨', '⓪'],\n9: ['🄰', '🄱', '🄲', '🄳', '🄴', '🄵', '🄶', '🄷', '🄸', '🄹', '🄺', '🄻', '🄼', '🄽', '🄾', '🄿', '🅀', '🅁', '🅂', '🅃', '🅄', '🅅', '🅆', '🅇', '🅈', '🅉', '①', '②', '③', '④', '⑤', '⑥', '⑦', '⑧', '⑨', '⓪'],\n10: ['‌🇦‌', '‌‌🇧‌', '‌🇨‌', '‌🇩‌', '‌🇪‌', '‌🇫‌', '‌🇬‌', '‌🇭‌', '‌🇮‌', '‌🇯‌', '‌🇰‌', '‌🇱‌', '‌🇲‌', '‌🇳‌', '‌🇴‌', '‌🇵‌', '‌🇶‌', '‌🇷‌', '‌🇸‌', '‌🇹‌', '‌🇺‌', '‌🇻‌', '‌🇼‌', '‌🇽‌', '‌🇾‌', '‌🇿‌', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0'], \n})\n\nasync function style(text, style = 1) {\n    var replacer = []\n    xStr.map((v, i) => replacer.push({\n        original: v,\n        convert: yStr[style][i]\n    }))\n    var str = text.toLowerCase().split('')\n    var output = []\n    str.map(v => {\n        const find = replacer.find(x => x.original == v)\n        find ? output.push(find.convert) : output.push(v)\n    })\n    return output.join('')\n}\n\nhandler.help = ['reacttxt <link> <text> [type]']\nhandler.tags = ['tools']\nhandler.command = /^(reacttxt)$/i\n\nmodule.exports = handler",
  "createdAt": "2025-04-08T05:31:20.892Z"
}